name: Build and push a new docker image based on project release tag.

on:
  release:
    types: [published]

jobs:
  Build-and-push-docker-image:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2

      - name: Args in case development
        if: ${{ github.ref == 'refs/heads/development' }}
        run: |
          VERSION=$GITHUB_SHA
          echo VERSION=${VERSION:0:7} >> $GITHUB_ENV
          echo NETWORK=dev >> $GITHUB_ENV

      - name: Args in case test
        if: |
          github.event.release.prerelease == true &&
          contains(github.event.release.tag_name, 'rc')
        run: |
          VERSION=$GITHUB_REF
          echo VERSION=${VERSION:10:12} >> $GITHUB_ENV
          echo NETWORK=test >> $GITHUB_ENV

      - name: Args in case qa
        if: |
          github.event.release.prerelease == true &&
          contains(github.event.release.tag_name, 'qa')
        run: |
          VERSION=$GITHUB_REF
          echo VERSION=${VERSION:10:12} >> $GITHUB_ENV
          echo NETWORK=qa >> $GITHUB_ENV

      - name: Args in case main
        if: |
          github.event_name == 'release' &&
          github.event.release.prerelease != true
        run: |
          VERSION=$GITHUB_REF
          echo VERSION=${VERSION:10:12} >> $GITHUB_ENV
          echo NETWORK=main >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/tfgrid_dashboard:${{env.VERSION}}
          build-args: |
            VERSION=${{env.VERSION}}
            NETWORK=${{env.NETWORK}}
